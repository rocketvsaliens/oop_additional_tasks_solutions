"""
Напишите класс MyList, представляющий собой список, имеющий следующие методы:

- __init__(self, data): конструктор, принимающий список элементов;
- __repr__(self): магический метод, возвращающий строковое представление списка,
которое можно использовать для создания нового объекта класса MyList;
- __str__(self): магический метод, возвращающий строковое представление списка;
- __len__(self): магический метод, возвращающий длину списка;
- __add__(self, other): магический метод, который позволяет складывать списки и возвращать новый список.
"""


class MyList:
    def __init__(self, data: list) -> None:
        """Конструктор, принимающий список элементов"""
        if type(data) == list:  # проверка на тип список
            self.data = data
        else:
            # если на вход пришёл не список, то выбрасываем исключение
            raise TypeError('Данные должны быть списком')

    def __repr__(self) -> str:
        """
        Возвращает строковое представление списка,
        которое можно использовать для создания нового объекта класса MyList
        """
        return f'{self.__class__.__name__}({self.data}'

    def __str__(self) -> str:
        """Возвращает строковое представление списка"""
        return f'Экземпляр класса {self.__class__.__name__} со списком {self.data}'

    def __len__(self) -> int:
        """
        Метод позволяет применить функцию len к экземпляру класса MyList
        и вернёт длину списка data
        """
        return len(self.data)

    def __add__(self, other):
        """Позволяет складывать списки и
        возвращает новый экземпляр класса Mylist с одним общим списком"""
        # Писать self.__class__ -- это лучше, чем писать название класса, потому что
        # класс мы можем переименовать, и тогда не придётся вносить изменения в нескольких местах
        return self.__class__(self.data + other.data)


if __name__ == '__main__':
    # создаём экземпляр класса
    my_list1 = MyList([1, 2, 3])
    # выводим строковое представление, по которому можно создать новый объект
    print(repr(my_list1))  # MyList([1, 2, 3])
    # выводим человеческое строковое представление
    print(str(my_list1))  # Экземпляр класса MyList со списком [1, 2, 3]
    # выводим длину списка
    print(len(my_list1))  # 3

    # создаём экземпляр класса
    my_list2 = MyList([4, 5, 6])
    # складываем два списка
    my_list3 = my_list1 + my_list2
    # выводим человеческое строковое представление нового экземпляра класса со списком
    print(my_list3)  # Экземпляр класса MyList со списком [1, 2, 3, 4, 5, 6]
