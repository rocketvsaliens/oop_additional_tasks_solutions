"""
Напишите класс Fraction, представляющий собой дробь, имеющий следующие методы:

- __init__(self, numerator, denominator): конструктор, принимающий числитель и знаменатель дроби;
- __repr__(self): магический метод, возвращающий строковое представление дроби,
которое можно использовать для создания нового объекта класса Fraction;
- __str__(self): магический метод, возвращающий строковое представление дроби;
- __add__(self, other): магический метод, который позволяет складывать дроби и возвращать новую дробь.
"""


class Fraction:

    def __init__(self, numerator, denominator):
        """
        Конструктор-инициализатор экземпляра класса
        :param numerator: числитель дроби
        :param denominator: знаменатель дроби
        """
        self.numerator = numerator
        self.denominator = denominator

    def __repr__(self):
        """
        Вывод отладочной информации, которую можно использовать
        для создания нового объекта класса Fraction"""
        return f'{self.__class__.__name__}({self.numerator}, {self.denominator})'

    def __str__(self):
        """Возвращает строковое представление дроби (например, 1/2)"""
        return f'{self.numerator}/{self.denominator}'

    def __add__(self, other):
        """
        Магический метод, который позволяет складывать дроби и возвращать новую дробь.
        Новая дробь возвращается в виде нового экземпляра класса Fraction.
        """
        # Чтобы сложить обыкновенные дроби, у которых разные знаменатели, нужно:
        # 1. найти общий знаменатель;
        # 2. привести дроби к общему знаменателю (желательно к наименьшему общему знаменателю);
        # 3. выполнить сложение дробей: сложить числители и под их суммой подписать общий знаменатель;
        # 4. сократить полученную дробь, если это возможно.
        if isinstance(other, Fraction):  # проверяем, что второй операнд тоже экземпляр нашего класса
            # Самый простой способ найти общий знаменатель у двух дробей -- перемножить их знаменатели
            common_denominator = self.denominator * other.denominator
            # Складываем дроби. Так как перед этим мы привели их к новому общему знаменателю,
            # то оба числителя надо предварительно умножить на новый общий знаменатель
            new_numerator = (self.numerator * other.denominator) + (other.numerator * self.denominator)
            # Проверяем, можно ли сократить дробь. Для этого находим наибольший общий делитель (НОД)
            nod = 0  # Устанавливаем начальное значение НОД. Помним, что на 0 делить нельзя, но не обращаем внимания
            # Дальше циклом пробегаемся по всем значениям в диапазоне от 2 (потому что на 1 и так всё делится)
            # до максимума числителя и знаменателя (знаменатель может быть больше числителя), делённого на 2 плюс 1
            # -- потому что вряд ли мы найдём НОД, который будет больше, чем половина большего числа)
            # Помним, что деление всегда возвращает float и не забываем перевести результат деления в int
            for i in range(2, int(max(common_denominator, new_numerator) / 2) + 1):
                if new_numerator % i == 0 and common_denominator % i == 0:
                    nod = i
            if nod:  # если найден НОД (т.е. значение nod больше нуля)
                # Сокращаем нашу дробь. Помним, что деление всегда возвращает тип float
                common_denominator /= nod  # делим знаменатель на НОД
                new_numerator /= nod  # делим числитель на НОД
            return Fraction(int(new_numerator), int(common_denominator))  # возвращаем новый экземпляр класса
        else:
            raise TypeError("Оба операнда должны быть экземплярами класса Fractions")


if __name__ == '__main__':
    # создаём экземпляр класса
    fraction1 = Fraction(1, 2)
    # выводим представление экземпляра для разработчиков
    # (если его скопировать, можно сделать новый экземпляр)
    print(repr(fraction1))  # Fraction(1, 2)
    # выводим строковое (человеческое) представление экземпляра
    print(str(fraction1))  # 1/2

    # создаём второй экземпляр класса
    fraction2 = Fraction(3, 4)
    # складываем два экземпляра класса (по сути две дроби)
    fraction3 = fraction1 + fraction2
    # выводим строковое представление нового экземпляра класса,
    # полученного от сложения двух предыдущих
    print(fraction3)  # 5/4

    # Проверить сложение дробей можно здесь https: // calc.by / math - calculators / fraction - calculator.html

